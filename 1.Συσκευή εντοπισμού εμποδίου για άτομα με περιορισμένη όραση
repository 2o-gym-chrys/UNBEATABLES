1.Συσκευή εντοπισμού εμποδίου για άτομα με περιορισμένη όραση

Προγραμματισμός με αισθητήρα υπερήχων και ενεργοποίηση led και βομβητή μέσα στην τουαλέτα για άτομα με προβλήματα όρασης. Θα την χρησιμοποιούν άτομα με προβλήματα όρασης μέσα στη δημόσια τουαλέτα και, όταν πλησιάζουν σε απόσταση που θα ορίσουμε εμείς, θα ανάβει ένα φωτάκι και θα ηχεί ο βομβητής (μία συσκευή ηχητικών σημάτων) που θα ειδοποιεί το άτομο ότι υπάρχει εμπόδιο μπροστά του.Η συσκευή μπορεί να χρησιμοποιηθεί οπουδήποτε όχι μόνο στην τουαλέτα.

Υλικά και Κόστος

ARDUINO Uno SMD Compatible - CH340  €7.90
Αισθητήρας Υπερήχων ULTRASONIC SENSOR 2 - 450cm HY-SRF05  €2.88
LED Diffused 5mm Κόκκινο  €0.08 
Αντίσταση (Αγοράσαμε το βασικό  Κιτ Αντιστάσεων - 100τμχ.  €1.90 )
Buzzer 5V  €1.28 
Καλώδια σύνδεσης (Αγοράσαμε το Jumper Wires 15cm Female to Male - Pack of 10 (Mix) €1.44 και κάποια υπήρχαν στο σχολείο)
Πηγή τροφοδοσίας (μπαταρία + υποδοχή) Υπήρχε στο σχολείο


ΠΡΟΓΡΑΜΜΑΤΙΣΜΟΣ ARDUINO.IDE


Sketch_apr2a

// Define pins
const int trigPin = 9;  // Trig pin of the ultrasonic sensor
const int echoPin = 10; // Echo pin of the ultrasonic sensor
const int ledPin = 13;  // LED pin
const int buzzerPin = 8; // Buzzer pin

// Define threshold distance in centimeters
const int thresholdDistance = 10;  // Distance in cm to trigger LED and Buzzer

void setup() {
  // Initialize the serial monitor for debugging
  Serial.begin(9600);

  // Initialize pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(ledPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
}

void loop() {
  // Send pulse to trigger the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Read the duration of the echo pulse
  long duration = pulseIn(echoPin, HIGH);

  // Calculate the distance in centimeters
  long distance = duration * 0.0344 / 2;

  // Print the distance to the Serial Monitor for debugging
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Check if the object is within the threshold distance
  if (distance < thresholdDistance) {
    // Turn on LED and buzzer
    digitalWrite(ledPin, HIGH);
    digitalWrite(buzzerPin, HIGH);
    delay(5000);
  } else {
    // Turn off LED and buzzer
    digitalWrite(ledPin, LOW);
    digitalWrite(buzzerPin, LOW);
  }

  // Delay before taking the next reading
  delay(100);
}

